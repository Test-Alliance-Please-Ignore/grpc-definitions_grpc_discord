syntax = "proto3";

package grpc_discord;

message Ping {
    string message = 1;   
}

message Pong {
    string message = 1;   
}

message Guild {
    int64 id = 1;
    string name = 2;
    string icon = 3;
    bool unavailable = 4;
    reserved 5; //roles
}

message Role {
    int64 id = 1;
    string name = 2;
    Guild guild = 3;
    int32 color = 4;
    bool hoist = 5;
    int32 position = 6;
    bool mentionable = 7;
    int64 created_at = 8;
}

message User {
    int64 id = 1;
    string display_name = 2;
    bool bot = 3;
    string discriminator = 4;
    string username = 5;
    int64 joined_at = 6;
    int64 created_at = 7;
    Role top_role = 8;
    repeated Role roles = 9;
}

message GetUserRequest {
    oneof search_criteria {
        int64 id = 1;
        string display_name = 2;
    }
    bool include_roles = 3;
}

message GetUserResponse {
    User user = 1;
    bool success = 2;   
}

message DisableUserResponse {
    string message = 1;
    bool success = 2;
}

message BanUserRequest {
    User user = 1;
    string reason = 2;
}

message BanUserResponse {
    string message = 1;
    bool success = 2;
}

message StripUserRequest {
    User user = 1;
    string reason = 2;
}

message StripUserResponse {
    string message = 1;
    bool success = 2;
}

service Discord {
    rpc Check(Ping) returns (Pong);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc StripUserRoles(StripUserRequest) returns (StripUserResponse);
}