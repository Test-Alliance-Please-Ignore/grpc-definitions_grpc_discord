syntax = "proto3";

package grpc_discord;


message Ping {
    string message = 1;
}

message Pong {
    string message = 1;
}

message Channel {
    int64 id = 1;
    string name = 2;
}

message Guild {
    int64 id = 1;
    string name = 2;
    string icon = 3;
    bool unavailable = 4;
    reserved 5; //roles
}

message Role {
    int64 id = 1;
    string name = 2;
    Guild guild = 3;
    int32 color = 4;
    bool hoist = 5;
    int32 position = 6;
    bool mentionable = 7;
    int64 created_at = 8;
}

message AuthGroup {
    int32 id = 1;
    string name = 2;
}

message AuthGroupMembership {
    repeated AuthGroup groups = 1;
}

message RolesMembership {
    repeated Role roles = 1;
}

message User {
    int64 id = 1;
    string display_name = 2;
    bool bot = 3;
    string discriminator = 4;
    string username = 5;
    int64 joined_at = 6;
    int64 created_at = 7;
    Role top_role = 8;
    repeated Role roles = 9;
}

message GetUserRequest {
    oneof search_criteria {
        int64 id = 1;
        string display_name = 2;
    }
    bool include_roles = 3;
}

message GetUserResponse {
    User user = 1;
    bool success = 2;   
}

message DisableUserResponse {
    string message = 1;
    bool success = 2;
}

message BanUserRequest {
    User user = 1;
    string reason = 2;
}

message BanUserResponse {
    string message = 1;
    bool success = 2;
}

message StripUserRequest {
    User user = 1;
    string reason = 2;
}

message StripUserResponse {
    string message = 1;
    bool success = 2;
}

message UpdateDisplayNameRequest {
    User user = 1;
    string nickname = 2;
}

message UpdateDisplayNameResponse {
    string message = 1;
    bool success = 2;
}

message UpdateUserRolesRequest {
    User user = 1;
    bool reset = 2;
    oneof membership {
        AuthGroupMembership groups = 3;
        RolesMembership roles = 4;
    }
}

message UpdateUserRolesResponse {
    string message = 1;
    bool success = 2;
}

message KickUserRequest {
    string reason = 1;
    int64 discord_id = 2;
}

message KickUserResponse {
    bool success = 1;
    string message = 2;
}

message RegisterUserRequest {
    int64 discord_id = 1;
    int32 auth_id = 2;
}

message RegisterUserResponse {
    bool success = 1;
    string message = 2;
}

message UpdateUserRequest {
    int64 discord_id = 1;
    int32 auth_id = 2;
    bool active = 3;
}

message UpdateUserResponse {
    bool success = 1;
    string message = 2;
}

message InviteUserRequest {
    int64 discord_id = 1;
}

message InviteUserResponse {
    bool success = 1;
    string message = 2;
}

message SendMessageRequest {
    oneof target {
        Channel channel = 1;
        User user = 2;
    }
    string message = 3;
}

message SendMessageResponse {
    bool success = 1;
    string message = 2;
}

service Discord {
    rpc Check(Ping) returns (Pong);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc StripUserRoles(StripUserRequest) returns (StripUserResponse);
    rpc SetUserNickname(UpdateDisplayNameRequest) returns (UpdateDisplayNameResponse);
    rpc UpdateRoles(UpdateUserRolesRequest) returns (UpdateUserRolesResponse);
    rpc KickUser(KickUserRequest) returns (KickUserResponse);
    rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc InviteUser(InviteUserRequest) returns (InviteUserResponse);
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
}